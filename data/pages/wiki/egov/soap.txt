====== SoapUI-ga mockimine ======

**SOAP (Simple Object Access Protocol)** is a protocol specification for exchanging structured information in the implementation of web services in computer networks. It uses XML Information Set for its message format, and relies on application layer protocols, most often Hypertext Transfer Protocol (HTTP) or Simple Mail Transfer Protocol (SMTP), for message negotiation and transmission.

In computing, **representational state transfer (REST)** is an architectural style consisting of a coordinated set of components, connectors, and data elements within a distributed hypermedia system, where the focus is on component roles and a specific set of interactions between data elements rather than implementation details.[1][2] Its purpose is to induce performance, scalability, simplicity, modifiability, visibility, portability, and reliability.[1][2] REST is the software architectural style of the World Wide Web.

**WSDL files** are central to testing SOAP-based services; they define the actual contact a service exposes and are required by SoapUI to generate tests, messages, validations and MockServices. SoapUI supports the most widely used 1.1 version of WSDL and corresponding bindings for SOAP 1.1 and 1.2. The now-obsolete SOAP-Encoding standard (used for specifying XML contracts before XML Schema was formalized) is supported partially.


** Hands on ** 

Integratsioonimooduli konfiguratsiooni vajalik teha muudatus, mis teenus vastu mockimist käima hakkab. Aadressiks panna võrgus enda arvuti aadress ning vastav mockimis teenus. Enne saab brauseris järgi vaadata, kas vastav teenus on kättesaadav või mitte. Näiteks: 
  * #security-server-emtav5=http://dell982.webmedia.int:8088/emtav5
  * #security-server-kir=http://dell823:8088/mockKirBinding

NB! kui oma arvutist (dell823.webmedia.int) mockima hakkad, siis võta võrguks wifi. Kuna Tiit fikseeris mu IP-aadressi ära, siis kattub see mu Wifi võrgust saadava IP-ga. Vastasel juhul ei leia server arvutit võrgust üles.

Software app
  * Mainframe (generally depreceated)
  * ClientServer
  * WebApplication
  * MobileApplication

